#include "../../ThermoPropCubicEos.hpp"

int main() {
auto T = 300.; // Isoterma com temperatura constante
auto databasePath = "/home/palomajo/Documentos/ThermoPropCubicEos/database/test.yml";
auto components = "CO2 C1"; // Componentes
std::vector<double> Tc, Pc, omega;

auto EoSModel = CubicEOSModel::PengRobinson; // PR escolhido

std::vector<double> z{0.2, 0.8}; // Fração molar para mistura
auto ncomp=z.size();

read_database(Tc, Pc, omega, databasePath, components);
//para 200k
//std::vector<double> V = {1.64868611e-02, 6.49512304e-03, 4.00271151e-03, 2.87003302e-03, 2.22252383e-03, 1.80320034e-03, 1.50931809e-03, 1.29175127e-03, 1.12405041e-03, 9.75103568e-04, 8.54243393e-04, 7.57089382e-04, 6.77214925e-04, 6.10315318e-04, 5.53397129e-04, 5.04312331e-04, 4.61477240e-04, 4.23695731e-04, 3.90043780e-04, 3.59791106e-04, 3.32345380e-04, 3.07209247e-04, 2.83941429e-04, 2.62108921e-04, 2.41195802e-04, 2.20333180e-04, 1.97220625e-04, 1.67356205e-04, 1.33969014e-04, 9.96615738e-05, 6.31410564e-05, 5.75418675e-05, 5.70464444e-05, 5.65857070e-05, 5.61550533e-05, 5.57507588e-05, 5.53697637e-05, 5.50095213e-05, 5.46678882e-05, 5.43430421e-05, 5.40334201e-05, 5.37376708e-05, 5.34546178e-05, 5.31832302e-05, 5.29225991e-05, 5.26719191e-05, 5.24304732e-05, 5.21976196e-05, 5.19727820e-05, 5.17554407e-05, 5.15451252e-05, 5.13414085e-05, 5.11439015e-05, 5.09522488e-05, 5.07661247e-05, 5.05852302e-05, 5.04092901e-05, 5.02380502e-05, 5.00712757e-05, 4.99087489e-05, 4.97502676e-05, 4.95956439e-05, 4.94447027e-05, 4.92972803e-05, 4.91532241e-05, 4.90123908e-05, 4.88746464e-05, 4.87398649e-05, 4.86079279e-05, 4.84787240e-05, 4.83521479e-05, 4.82281008e-05, 4.81064889e-05, 4.79872236e-05, 4.78702212e-05, 4.77554022e-05, 4.76426914e-05, 4.75320171e-05, 4.74233115e-05, 4.73165099e-05, 4.72115508e-05, 4.71083756e-05, 4.70069284e-05, 4.69071560e-05, 4.68090075e-05, 4.67124342e-05, 4.66173897e-05, 4.65238296e-05, 4.64317111e-05, 4.63409936e-05, 4.62516380e-05, 4.61636068e-05, 4.60768639e-05, 4.59913750e-05, 4.59071067e-05, 4.58240272e-05, 4.57421058e-05, 4.56613130e-05, 4.55816203e-05, 4.55030005e-05};
//std::vector<double> V = {0.0164868611, 0.00649512304,0.00400271151,0.00287003302,0.00222252383,0.00180320034,0.00150931809,0.00129175127,0.00112405041,0.000975103568,0.000854243393,0.000757089382,0.000677214925,0.000610315318,0.000553397129,0.000504312331,0.00046147724,0.000423695731,0.00039004378,0.000359791106,0.00033234538,0.000307209247,0.000283941429,0.000262108921,0.000241195802,0.00022033318,0.000197220625,0.000167356205,0.000133969014,0.0000996615738,0.0000631410564,0.0000575418675,0.0000570464444,0.000056585707,0.0000561550533,0.0000557507588,0.0000553697637,0.0000550095213,0.0000546678882,0.0000543430421,0.0000540334201,0.0000537376708,0.0000534546178,0.0000531832302,0.0000529225991,0.0000526719191,0.0000524304732,0.0000521976196,0.000051972782,0.0000517554407,0.0000515451252,0.0000513414085,0.0000511439015,0.0000509522488,0.0000507661247,0.0000505852302,0.0000504092901,0.0000502380502,0.0000500712757,0.0000499087489,0.0000497502676,0.0000495956439,0.0000494447027,0.0000492972803,0.0000491532241,0.0000490123908,0.0000488746464,0.0000487398649,0.0000486079279,0.000048478724,0.0000483521479,0.0000482281008,0.0000481064889,0.0000479872236,0.0000478702212,0.0000477554022,0.0000476426914,0.0000475320171,0.0000474233115,0.0000473165099,0.0000472115508,0.0000471083756,0.0000470069284,0.000046907156,0.0000468090075,0.0000467124342,0.0000466173897,0.0000465238296,0.0000464317111,0.0000463409936,0.000046251638,0.0000461636068,0.0000460768639,0.000045991375,0.0000459071067,0.0000458240272,0.0000457421058,0.000045661313,0.0000455816203,0.0000455030005};

//para 300k
//std::vector<double> V = {0.02487877, 0.00989271, 0.0061557, 0.00445835, 0.00348883, 0.00286167, 0.00242274,0.00209838, 0.00184892, 0.0016511, 0.00149041, 0.00135728, 0.0012452, 0.00114955,0.00106695, 0.00099492, 0.00093155,0.00087537, 0.00082523, 0.0007802, 0.00073955, 0.00070266, 0.00066904, 0.00063828, 0.00061002, 0.00058398, 0.00055991, 0.00053759, 0.00051684, 0.0004975, 0.00047944, 0.00046253, 0.00044667,0.00043176, 0.00041773, 0.0004045, 0.000392, 0.00038017, 0.00036898, 0.00035835, 0.00034827, 0.00033867,0.00032955, 0.00032085, 0.00031255, 0.00030463, 0.00029706, 0.00028982, 0.00028289,   0.00027625, 0.00026989, 0.00026378, 0.00025792, 0.00025228, 0.00024687, 0.00024166, 0.00023665, 0.00023182, 0.00022717, 0.00022269, 0.00021837, 0.0002142, 0.00021017, 0.00020629, 0.00020253, 0.0001989,0.00019539, 0.00019199, 0.00018871, 0.00018553, 0.00018245, 0.00017947, 0.00017658, 0.00017378, 0.00017107, 0.00016844, 0.00016588, 0.00016341, 0.000161, 0.00015867, 0.00015641, 0.00015421,0.00015207, 0.00015,    0.00014798, 0.00014602, 0.00014411, 0.00014226, 0.00014045, 0.0001387, 0.00013699,    0.00013533, 0.00013372, 0.00013214, 0.00013061, 0.00012912, 0.00012766, 0.00012625,   0.00012486, 0.00012352};

/*
if (V.size() != 100) {
    std::cerr << "Erro: O vetor V deve conter exatamente 100 valores.\\n";
    return 1;
}
*/

//50 primeiros
//std::vector<double> V = {0.0248788,0.00989271,0.0061557,0.00445835,0.00348883,0.00286167,0.00242274,0.00209838,0.00184892,0.0016511,0.00149041,0.00135728,0.0012452,0.00114955,0.00106695,0.00099492,0.00093155,0.00087537,0.00082523,0.0007802,0.00073955,0.00070266,0.00066904,0.00063828,0.00061002,0.00058398,0.00055991,0.00053759,0.00051684,0.0004975,0.00047944,0.00046253,0.00044667,0.00043176,0.00041773,0.0004045,0.000392,0.00038017,0.00036898,0.00035835,0.00034827,0.00033867,0.00032955,0.00032085,0.00031255,0.00030463,0.00029706,0.00028982,0.00028289,0.00027625};

//50 ultimos
std::vector<double> V = {0.00026989,0.00026378,0.00025792,0.00025228,0.00024687,0.00024166,0.00023665,0.00023182,0.00022717,0.00022269,0.00021837,0.0002142,0.00021017,0.00020629,0.00020253,0.0001989,0.00019539,0.00019199,0.00018871,0.00018553,0.00018245,0.00017947,0.00017658,0.00017378,0.00017107,0.00016844,0.00016588,0.00016341,0.000161,0.00015867,0.00015641,0.00015421,0.00015207,0.00015,0.00014798,0.00014602,0.00014411,0.00014226,0.00014045,0.0001387,0.00013699,0.00013533,0.00013372,0.00013214,0.00013061,0.00012912,0.00012766,0.00012625,0.00012486,0.00012352};



calculateIsotermaComp(EoSModel, Tc, Pc, omega, T, V, z, ncomp);

return 0;}
/*

// apartir do sugerido:
//std::vector<double> V = {0.00023182, 0.00022717, 0.00022269, 0.00021837, 0.0002142, 0.00021017, 0.00020629, 0.00020253, 0.0001989, 0.00019539, 0.00019199, 0.00018871, 0.00018553, 0.00018245, 0.00017947, 0.00017658, 0.00017378, 0.00017107, 0.00016844, 0.00016588, 0.00016341, 0.000161, 0.00015867, 0.00015641, 0.00015421, 0.00015207, 0.00015, 0.00014798, 0.00014602, 0.00014411, 0.00014226, 0.00014045, 0.0001387, 0.00013699, 0.00013533, 0.00013372, 0.00013214, 0.00013061, 0.00012912, 0.00012766, 0.00012625, 0.00012486, 0.00012352};

/*
if (V.size() != 100) {
    std::cerr << "Erro: O vetor V deve conter exatamente 100 valores.\\n";
    return 1;
}

//50 primeiros
//std::vector<double> V = {0.0248788,0.00989271,0.0061557,0.00445835,0.00348883,0.00286167,0.00242274,0.00209838,0.00184892,0.0016511,0.00149041,0.00135728,0.0012452,0.00114955,0.00106695,0.00099492,0.00093155,0.00087537,0.00082523,0.0007802,0.00073955,0.00070266,0.00066904,0.00063828,0.00061002,0.00058398,0.00055991,0.00053759,0.00051684,0.0004975,0.00047944,0.00046253,0.00044667,0.00043176,0.00041773,0.0004045,0.000392,0.00038017,0.00036898,0.00035835,0.00034827,0.00033867,0.00032955,0.00032085,0.00031255,0.00030463,0.00029706,0.00028982,0.00028289,0.00027625};

calculateIsotermaComp(EoSModel, Tc, Pc, omega, T, V, z, ncomp);

return 0;

}


*/
